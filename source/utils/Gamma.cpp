#include "Gamma.h"
#define I std::complex<real_t>(0.,1.)

namespace Update {

const std::complex<real_t> Gamma::gamma5_id_plus_gamma[4][4][4] = {{{1, 0, 0, -I}, {0, 1, -I, 0}, {0, -I, -1, 0}, {-I, 0, 0, -1}},{{1, 0, 0, -1}, {0, 1, 1, 0}, {0, -1, -1, 0}, {1, 0, 0, -1}},{{1, 0, -I, 0}, {0, 1, 0, I}, {-I, 0, -1, 0}, {0, I, 0, -1}},{{1, 0, 1, 0}, {0, 1, 0, 1}, {-1, 0, -1, 0}, {0, -1, 0, -1}}};
const std::complex<real_t> Gamma::gamma5_id_minus_gamma[4][4][4] = {{{1, 0, 0, I}, {0, 1, I, 0}, {0, I, -1, 0}, {I, 0, 0, -1}},{{1, 0, 0, 1}, {0, 1, -1, 0}, {0, 1, -1, 0}, {-1, 0, 0, -1}},{{1, 0, I, 0}, {0, 1, 0, -I}, {I, 0, -1, 0}, {0, -I, 0, -1}},{{1, 0, -1, 0}, {0, 1, 0, -1}, {1, 0, -1, 0}, {0, 1, 0, -1}}};
const std::complex<real_t> Gamma::gamma5gammamu[4][4][4] = {{{0, 0, 0, -I}, {0, 0, -I, 0}, {0, -I, 0, 0}, {-I, 0, 0, 0}}, {{0, 0, 0, -1}, {0, 0, 1, 0}, {0, -1, 0, 0}, {1, 0, 0, 0}}, {{0, 0, -I, 0}, {0, 0, 0, I}, {-I, 0, 0, 0}, {0, I, 0, 0}}, {{0, 0, 1, 0}, {0, 0, 0, 1}, {-1, 0, 0, 0}, {0, -1, 0, 0}}};
const std::complex<real_t> Gamma::gammamu[4][4][4] = {{{0, 0, 0, -I}, {0, 0, -I, 0}, {0, I, 0, 0}, {I, 0, 0, 0}}, {{0, 0, 0, -1}, {0, 0, 1, 0}, {0, 1, 0, 0}, {-1, 0, 0, 0}}, {{0, 0, -I, 0}, {0, 0, 0, I}, {I, 0, 0, 0}, {0, -I, 0, 0}}, {{0, 0, 1, 0}, {0, 0, 0, 1}, {1, 0, 0, 0}, {0, 1, 0, 0}}};
const std::complex<real_t> Gamma::_gamma5[4][4] = {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}};

const std::complex<real_t> Sigma::gamma5_sigma[4][4][4][4] = {{{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},{{-1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,-1}},{{0,-I,0,0},{I,0,0,0},{0,0,0,I},{0,0,-I,0}},{{0,1,0,0},{1,0,0,0},{0,0,0,1},{0,0,1,0}}},{{{1,0,0,0},{0,-1,0,0},{0,0,-1,0},{0,0,0,1}},{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},{{0,-1,0,0},{-1,0,0,0},{0,0,0,1},{0,0,1,0}},{{0,-I,0,0},{I,0,0,0},{0,0,0,-I},{0,0,I,0}}},{{{0,I,0,0},{-I,0,0,0},{0,0,0,-I},{0,0,I,0}},{{0,1,0,0},{1,0,0,0},{0,0,0,-1},{0,0,-1,0}},{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}},{{1,0,0,0},{0,-1,0,0},{0,0,1,0},{0,0,0,-1}}},{{{0,-1,0,0},{-1,0,0,0},{0,0,0,-1},{0,0,-1,0}},{{0,I,0,0},{-I,0,0,0},{0,0,0,I},{0,0,-I,0}},{{-1,0,0,0},{0,1,0,0},{0,0,-1,0},{0,0,0,1}},{{0,0,0,0},{0,0,0,0},{0,0,0,0},{0,0,0,0}}}};
const std::complex<real_t> Sigma::_sigma[4][4][4][4] = {{{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{-1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, {{0, -I, 0, 0}, {I, 0, 0, 0}, {0, 0, 0, -I}, {0, 0, I, 0}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}}}, {{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{0, -1, 0, 0}, {-1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}}, {{0, -I, 0, 0}, {I, 0, 0, 0}, {0, 0, 0, I}, {0, 0, -I, 0}}}, {{{0, I, 0, 0}, {-I, 0, 0, 0}, {0, 0, 0, I}, {0, 0, -I, 0}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}}, {{{0, -1, 0, 0}, {-1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, {{0, I, 0, 0}, {-I, 0, 0, 0}, {0, 0, 0, -I}, {0, 0, I, 0}}, {{-1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, {{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}}};

Gamma::Gamma() : gammaBasis(16), gammaChroma(16) {
	for (int i = 0; i < 16; ++i) {
		gammaBasis[i].resize(4*diracVectorLength,4*diracVectorLength);
		gammaChroma[i].resize(4*diracVectorLength,4*diracVectorLength);
		set_to_zero(gammaBasis[i]);
		set_to_zero(gammaChroma[i]);
	}

	gammaBasis[0].at(0, 0) = std::complex<real_t>(1, 0);
	gammaBasis[0].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(1, 1) = std::complex<real_t>(1, 0);
	gammaBasis[0].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(2, 2) = std::complex<real_t>(1, 0);
	gammaBasis[0].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[0].at(3, 3) = std::complex<real_t>(1, 0);
	gammaBasis[1].at(0, 0) = std::complex<real_t>(1, 0);
	gammaBasis[1].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(1, 1) = std::complex<real_t>(1, 0);
	gammaBasis[1].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(2, 2) = std::complex<real_t>(-1, 0);
	gammaBasis[1].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[1].at(3, 3) = std::complex<real_t>(-1, 0);
	gammaBasis[2].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(0, 3) = std::complex<real_t>(0, -1);
	gammaBasis[2].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(1, 2) = std::complex<real_t>(0, -1);
	gammaBasis[2].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(2, 1) = std::complex<real_t>(0, 1);
	gammaBasis[2].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(3, 0) = std::complex<real_t>(0, 1);
	gammaBasis[2].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[2].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(0, 3) = std::complex<real_t>(-1, 0);
	gammaBasis[3].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(1, 2) = std::complex<real_t>(1, 0);
	gammaBasis[3].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(2, 1) = std::complex<real_t>(1, 0);
	gammaBasis[3].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(3, 0) = std::complex<real_t>(-1, 0);
	gammaBasis[3].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[3].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(0, 2) = std::complex<real_t>(0, -1);
	gammaBasis[4].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(1, 3) = std::complex<real_t>(0, 1);
	gammaBasis[4].at(2, 0) = std::complex<real_t>(0, 1);
	gammaBasis[4].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(3, 1) = std::complex<real_t>(0, -1);
	gammaBasis[4].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[4].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(0, 2) = std::complex<real_t>(1, 0);
	gammaBasis[5].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(1, 3) = std::complex<real_t>(1, 0);
	gammaBasis[5].at(2, 0) = std::complex<real_t>(1, 0);
	gammaBasis[5].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(3, 1) = std::complex<real_t>(1, 0);
	gammaBasis[5].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[5].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(0, 3) = std::complex<real_t>(1, 0);
	gammaBasis[6].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(1, 2) = std::complex<real_t>(1, 0);
	gammaBasis[6].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(2, 1) = std::complex<real_t>(1, 0);
	gammaBasis[6].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(3, 0) = std::complex<real_t>(1, 0);
	gammaBasis[6].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[6].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(0, 3) = std::complex<real_t>(0, -1);
	gammaBasis[7].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(1, 2) = std::complex<real_t>(0, 1);
	gammaBasis[7].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(2, 1) = std::complex<real_t>(0, -1);
	gammaBasis[7].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(3, 0) = std::complex<real_t>(0, 1);
	gammaBasis[7].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[7].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(0, 2) = std::complex<real_t>(1, 0);
	gammaBasis[8].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(1, 3) = std::complex<real_t>(-1, 0);
	gammaBasis[8].at(2, 0) = std::complex<real_t>(1, 0);
	gammaBasis[8].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(3, 1) = std::complex<real_t>(-1, 0);
	gammaBasis[8].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[8].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(0, 2) = std::complex<real_t>(0, 1);
	gammaBasis[9].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(1, 3) = std::complex<real_t>(0, 1);
	gammaBasis[9].at(2, 0) = std::complex<real_t>(0, -1);
	gammaBasis[9].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(3, 1) = std::complex<real_t>(0, -1);
	gammaBasis[9].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[9].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(0, 0) = std::complex<real_t>(-1, 0);
	gammaBasis[10].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(1, 1) = std::complex<real_t>(1, 0);
	gammaBasis[10].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(2, 2) = std::complex<real_t>(-1, 0);
	gammaBasis[10].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[10].at(3, 3) = std::complex<real_t>(1, 0);
	gammaBasis[11].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(0, 1) = std::complex<real_t>(0, -1);
	gammaBasis[11].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(1, 0) = std::complex<real_t>(0, 1);
	gammaBasis[11].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(2, 3) = std::complex<real_t>(0, -1);
	gammaBasis[11].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[11].at(3, 2) = std::complex<real_t>(0, 1);
	gammaBasis[11].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(0, 1) = std::complex<real_t>(1, 0);
	gammaBasis[12].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(1, 0) = std::complex<real_t>(1, 0);
	gammaBasis[12].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(2, 3) = std::complex<real_t>(-1, 0);
	gammaBasis[12].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[12].at(3, 2) = std::complex<real_t>(-1, 0);
	gammaBasis[12].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(0, 1) = std::complex<real_t>(-1, 0);
	gammaBasis[13].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(1, 0) = std::complex<real_t>(-1, 0);
	gammaBasis[13].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(2, 3) = std::complex<real_t>(-1, 0);
	gammaBasis[13].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[13].at(3, 2) = std::complex<real_t>(-1, 0);
	gammaBasis[13].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(0, 0) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(0, 1) = std::complex<real_t>(0, -1);
	gammaBasis[14].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(1, 0) = std::complex<real_t>(0, 1);
	gammaBasis[14].at(1, 1) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(2, 2) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(2, 3) = std::complex<real_t>(0, 1);
	gammaBasis[14].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[14].at(3, 2) = std::complex<real_t>(0, -1);
	gammaBasis[14].at(3, 3) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(0, 0) = std::complex<real_t>(-1, 0);
	gammaBasis[15].at(0, 1) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(0, 2) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(0, 3) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(1, 0) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(1, 1) = std::complex<real_t>(1, 0);
	gammaBasis[15].at(1, 2) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(1, 3) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(2, 0) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(2, 1) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(2, 2) = std::complex<real_t>(1, 0);
	gammaBasis[15].at(2, 3) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(3, 0) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(3, 1) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(3, 2) = std::complex<real_t>(0, 0);
	gammaBasis[15].at(3, 3) = std::complex<real_t>(-1, 0);



	gammaChroma[0].at(0, 0) = std::complex<real_t>(1, 0);
	gammaChroma[0].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(1, 1) = std::complex<real_t>(1, 0);
	gammaChroma[0].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(2, 2) = std::complex<real_t>(1, 0);
	gammaChroma[0].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[0].at(3, 3) = std::complex<real_t>(1, 0);
	gammaChroma[1].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(0, 3) = std::complex<real_t>(0, -1);
	gammaChroma[1].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(1, 2) = std::complex<real_t>(0, -1);
	gammaChroma[1].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(2, 1) = std::complex<real_t>(0, 1);
	gammaChroma[1].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(3, 0) = std::complex<real_t>(0, 1);
	gammaChroma[1].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[1].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(0, 3) = std::complex<real_t>(-1, 0);
	gammaChroma[2].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(1, 2) = std::complex<real_t>(1, 0);
	gammaChroma[2].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(2, 1) = std::complex<real_t>(1, 0);
	gammaChroma[2].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(3, 0) = std::complex<real_t>(-1, 0);
	gammaChroma[2].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[2].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(0, 0) = std::complex<real_t>(0, 1);
	gammaChroma[3].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(1, 1) = std::complex<real_t>(0, -1);
	gammaChroma[3].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(2, 2) = std::complex<real_t>(0, 1);
	gammaChroma[3].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[3].at(3, 3) = std::complex<real_t>(0, -1);
	gammaChroma[4].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(0, 2) = std::complex<real_t>(0, -1);
	gammaChroma[4].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(1, 3) = std::complex<real_t>(0, 1);
	gammaChroma[4].at(2, 0) = std::complex<real_t>(0, 1);
	gammaChroma[4].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(3, 1) = std::complex<real_t>(0, -1);
	gammaChroma[4].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[4].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(0, 1) = std::complex<real_t>(-1, 0);
	gammaChroma[5].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(1, 0) = std::complex<real_t>(1, 0);
	gammaChroma[5].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(2, 3) = std::complex<real_t>(-1, 0);
	gammaChroma[5].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[5].at(3, 2) = std::complex<real_t>(1, 0);
	gammaChroma[5].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(0, 1) = std::complex<real_t>(0, 1);
	gammaChroma[6].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(1, 0) = std::complex<real_t>(0, 1);
	gammaChroma[6].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(2, 3) = std::complex<real_t>(0, 1);
	gammaChroma[6].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[6].at(3, 2) = std::complex<real_t>(0, 1);
	gammaChroma[6].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(0, 2) = std::complex<real_t>(1, 0);
	gammaChroma[7].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(1, 3) = std::complex<real_t>(1, 0);
	gammaChroma[7].at(2, 0) = std::complex<real_t>(-1, 0);
	gammaChroma[7].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(3, 1) = std::complex<real_t>(-1, 0);
	gammaChroma[7].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[7].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(0, 2) = std::complex<real_t>(1, 0);
	gammaChroma[8].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(1, 3) = std::complex<real_t>(1, 0);
	gammaChroma[8].at(2, 0) = std::complex<real_t>(1, 0);
	gammaChroma[8].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(3, 1) = std::complex<real_t>(1, 0);
	gammaChroma[8].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[8].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(0, 1) = std::complex<real_t>(0, -1);
	gammaChroma[9].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(1, 0) = std::complex<real_t>(0, -1);
	gammaChroma[9].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(2, 3) = std::complex<real_t>(0, 1);
	gammaChroma[9].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[9].at(3, 2) = std::complex<real_t>(0, 1);
	gammaChroma[9].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(0, 1) = std::complex<real_t>(-1, 0);
	gammaChroma[10].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(1, 0) = std::complex<real_t>(1, 0);
	gammaChroma[10].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(2, 3) = std::complex<real_t>(1, 0);
	gammaChroma[10].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[10].at(3, 2) = std::complex<real_t>(-1, 0);
	gammaChroma[10].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(0, 2) = std::complex<real_t>(0, 1);
	gammaChroma[11].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(1, 3) = std::complex<real_t>(0, -1);
	gammaChroma[11].at(2, 0) = std::complex<real_t>(0, 1);
	gammaChroma[11].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(3, 1) = std::complex<real_t>(0, -1);
	gammaChroma[11].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[11].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(0, 0) = std::complex<real_t>(0, -1);
	gammaChroma[12].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(1, 1) = std::complex<real_t>(0, 1);
	gammaChroma[12].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(2, 2) = std::complex<real_t>(0, 1);
	gammaChroma[12].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[12].at(3, 3) = std::complex<real_t>(0, -1);
	gammaChroma[13].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(0, 3) = std::complex<real_t>(-1, 0);
	gammaChroma[13].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(1, 2) = std::complex<real_t>(1, 0);
	gammaChroma[13].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(2, 1) = std::complex<real_t>(-1, 0);
	gammaChroma[13].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(3, 0) = std::complex<real_t>(1, 0);
	gammaChroma[13].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[13].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(0, 0) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(0, 3) = std::complex<real_t>(0, 1);
	gammaChroma[14].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(1, 1) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(1, 2) = std::complex<real_t>(0, 1);
	gammaChroma[14].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(2, 1) = std::complex<real_t>(0, 1);
	gammaChroma[14].at(2, 2) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(3, 0) = std::complex<real_t>(0, 1);
	gammaChroma[14].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[14].at(3, 3) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(0, 0) = std::complex<real_t>(1, 0);
	gammaChroma[15].at(0, 1) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(0, 2) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(0, 3) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(1, 0) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(1, 1) = std::complex<real_t>(1, 0);
	gammaChroma[15].at(1, 2) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(1, 3) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(2, 0) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(2, 1) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(2, 2) = std::complex<real_t>(-1, 0);
	gammaChroma[15].at(2, 3) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(3, 0) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(3, 1) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(3, 2) = std::complex<real_t>(0, 0);
	gammaChroma[15].at(3, 3) = std::complex<real_t>(-1, 0);

	for (int c = 0; c < diracVectorLength; ++c) {
		for (int d = 0; d < diracVectorLength; ++d) {
			if (c == 0 && d == 0) {
			}
			else if (c == d) {
				for (int i = 0; i < 16; ++i) {
					for (int nu = 0; nu < 4; ++nu) {
						for (int rho = 0; rho < 4; ++rho) {
							gammaChroma[i].at(c*4 + nu, d*4 + rho) = gammaChroma[i].at(nu, rho);
							gammaBasis[i].at(c*4 + nu, d*4 + rho) = gammaBasis[i].at(nu, rho);
						}
					}
				}
			}
		}
	}
	
}

}
